# /etc/nginx/sites-available/askaraai
# Optimized Nginx configuration for AskaraAI

server {
    listen 80;
    server_name askaraai.com www.askaraai.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name askaraai.com www.askaraai.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/askaraai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/askaraai.com/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/askaraai.com/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.openai.com https://generativelanguage.googleapis.com; frame-src 'self' https://accounts.google.com;" always;
    
    # Performance Settings
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    keepalive_timeout 65s;
    keepalive_requests 100;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Brotli Compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # Application Root
    root /var/www/askaraai;
    index index.html index.htm;
    
    # Main Application (Gunicorn)
    location / {
        # Rate limiting for general requests
        limit_req zone=general burst=20 nodelay;
        
        # Check for countdown mode first
        try_files $uri @app;
    }
    
    # API Endpoints
    location /api/ {
        # Different rate limits for different API endpoints
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://unix:/var/www/askaraai/askaraai.sock;
            include /etc/nginx/proxy_params;
        }
        
        location /api/process-video {
            limit_req zone=api burst=2 nodelay;
            proxy_pass http://unix:/var/www/askaraai/askaraai.sock;
            include /etc/nginx/proxy_params;
            
            # Extended timeout for video processing
            proxy_read_timeout 300s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
        }
        
        location /api/ {
            limit_req zone=general burst=20 nodelay;
            proxy_pass http://unix:/var/www/askaraai/askaraai.sock;
            include /etc/nginx/proxy_params;
        }
    }
    
    # Admin Panel (additional security)
    location /admin {
        # Restrict to specific IPs (optional)
        # allow 103.x.x.x;  # Your office IP
        # deny all;
        
        limit_req zone=general burst=10 nodelay;
        proxy_pass http://unix:/var/www/askaraai/askaraai.sock;
        include /etc/nginx/proxy_params;
    }
    
    # Launch/Countdown Page
    location /launch {
        proxy_pass http://unix:/var/www/askaraai/askaraai.sock;
        include /etc/nginx/proxy_params;
    }
    
    # Static Files with Caching
    location /static/ {
        alias /var/www/askaraai/static/;
        
        # Cache control for different file types
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin *;
        }
        
        # Default for other static files
        expires 7d;
        add_header Cache-Control "public";
    }
    
    # Video Clips (with access control and caching)
    location /clips/ {
        alias /var/www/askaraai/static/clips/;
        
        # Rate limiting for video access
        limit_req zone=api burst=3 nodelay;
        
        # Cache videos for 1 hour
        expires 1h;
        add_header Cache-Control "private";
        
        # Security headers for media files
        add_header X-Content-Type-Options nosniff always;
        
        # Only allow mp4 files
        location ~* \.mp4$ {
            try_files $uri =404;
        }
        
        # Deny access to non-mp4 files
        location ~ {
            deny all;
        }
    }
    
    # Favicon and robots.txt
    location = /favicon.ico {
        alias /var/www/askaraai/static/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
    }
    
    location = /robots.txt {
        proxy_pass http://unix:/var/www/askaraai/askaraai.sock;
        include /etc/nginx/proxy_params;
        expires 1d;
    }
    
    location = /sitemap.xml {
        proxy_pass http://unix:/var/www/askaraai/askaraai.sock;
        include /etc/nginx/proxy_params;
        expires 1d;
    }
    
    # Health Check Endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Application Proxy (fallback)
    location @app {
        proxy_pass http://unix:/var/www/askaraai/askaraai.sock;
        include /etc/nginx/proxy_params;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /\.env {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(config|database|storage)/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common exploit attempts
    location ~* /(wp-|wordpress|phpmyadmin|admin|administrator|manager|controlpanel) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/askaraai/static/error;
        internal;
    }
    
    location = /50x.html {
        root /var/www/askaraai/static/error;
        internal;
    }
    
    # Logging
    access_log /var/log/nginx/askaraai_access.log combined;
    error_log /var/log/nginx/askaraai_error.log warn;
    
    # Enable NGINX status for monitoring
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}

# Redirect www to non-www
server {
    listen 443 ssl http2;
    server_name www.askaraai.com;
    
    ssl_certificate /etc/letsencrypt/live/askaraai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/askaraai.com/privkey.pem;
    
    return 301 https://askaraai.com$request_uri;
}

# Additional server block for other domains (if any)
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;
    
    ssl_certificate /etc/letsencrypt/live/askaraai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/askaraai.com/privkey.pem;
    
    return 444;  # Drop connection
}